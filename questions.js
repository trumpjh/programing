// 프로그래밍 퀴즈 문제 데이터
const questions = {
    // 1일차: 프로그래밍 언어 기초
    day1: [
        {
            question: "프로그래밍 언어의 주요 목적에 대한 설명으로 가장 적절한 것은?",
            options: [
                "컴퓨터의 하드웨어를 직접 제어하는 것",
                "다양한 운영체제에서 호환되는 프로그램을 개발하는 것", 
                "기계와 의사소통하여 컴퓨터가 일을 할 수 있도록 명령을 내리는 것",
                "프로그램을 빠르게 실행할 수 있도록 최적화하는 것",
                "사용자가 이해하기 쉬운 형태로 데이터를 시각화하는 것"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "다음 순서도 구조 중, 조건에 따라 명령을 반복 수행할 수 있는 것은?",
            options: [
                "순차 구조",
                "선택 구조",
                "반복 구조",
                "병렬 구조",
                "분산 구조"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "사각형의 넓이를 계산하는 알고리즘을 의사 코드로 표현할 때, 입력으로 필요한 것은?",
            options: [
                "넓이(S)",
                "가로(w), 세로(h)",
                "시작과 끝",
                "계산식 (w * h)",
                "출력 결과"
            ],
            answer: 2,
            points: 2
        }
    ],

    // 4일차: 개발 환경 및 도구
    day4: [
        {
            question: "코드를 작성하고 편집하며 오류를 확인하는 등의 작업을 하나의 편집기 안에서 할 수 있는 통합 애플리케이션으로, 효율적으로 소프트웨어를 개발할 수 있도록 도와주는 환경은?",
            options: [
                "운영체제 (OS)",
                "통합 개발 환경 (IDE)",
                "버전 관리 시스템 (VCS)",
                "컴파일러",
                "인터프리터"
            ],
            answer: 2,
            points: 2
        },
        {
            question: "디지털 사회에서 주어진 문제를 디지털 기술을 활용하여 해결하고, 다른 사람과 소통 및 협업하며 정보를 탐색하고 분석하여 결과물을 생산하는 능력을 무엇이라고 하는가?",
            options: [
                "디지털 문해력",
                "디지털 전환",
                "디지털 역량",
                "정보 통신 기술 (ICT)",
                "인공 지능 (AI)"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "언론인 폴 길스터가 1997년에 처음 소개한 개념으로, 인터넷에서 찾아낸 다양한 정보를 자신의 목적에 맞는 새로운 정보로 조합하여 올바로 사용하는 능력을 의미하는 것은?",
            options: [
                "디지털 역량",
                "디지털 기술",
                "디지털 문해력 (디지털 리터러시)",
                "인공 지능 (AI)",
                "사물 인터넷 (IoT)"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "2005년 리눅스 제작자인 리누스 토발스가 공개 프로그램 리눅스 커널 개발의 효율성을 높이기 위해 개발한 분산형 버전 관리 시스템으로, 코드 수정 권한, 버전 추적 등 소프트웨어 개발에 필요한 관리 기능을 제공하는 것은?",
            options: [
                "Git",
                "Google Workspace",
                "GitHub",
                "Microsoft Teams",
                "Jupyter Notebook"
            ],
            answer: 1,
            points: 2
        },
        {
            question: "파이썬 프로그래밍 언어의 개발자로 올바른 것은?",
            options: [
                "리누스 토발스",
                "빌 게이츠",
                "스티브 잡스",
                "귀도 반 로섬",
                "제임스 고슬링"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "파이썬의 통합 개발 및 학습 환경(IDLE)에서 긴 코드를 작성할 때 사용하기에 적합하지 않은 모드는?",
            options: [
                "에디터 모드",
                "프로젝트 모드",
                "셸 모드",
                "디버그 모드",
                "비주얼 모드"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "파이썬 프로그래밍에 특화된 통합 개발 환경으로, 스마트 코드 완성, 즉석 오류 검사 및 빠른 수정, 자동 코드 리팩터링 등 다양한 기능을 제공하는 것은?",
            options: [
                "IDLE",
                "Jupyter Notebook",
                "Colab",
                "VS Code",
                "PyCharm"
            ],
            answer: 5,
            points: 2
        },
        {
            question: "구글에서 제공하는 주피터 노트북 개발 환경으로, 별도의 구성 없이 웹 브라우저에서 파이썬을 작성하고 실행할 수 있으며, 자주 사용되는 라이브러리가 기본적으로 설치되어 있고, 가상 서버에 있는 GPU를 무료로 사용할 수 있는 환경은?",
            options: [
                "IDLE",
                "Jupyter Notebook", 
                "Colab",
                "VS Code",
                "PyCharm"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "파이썬을 설치할 때, 파이썬 인터프리터를 실행하기 위한 명령어를 어느 경로에서든 실행할 수 있도록 반드시 선택해야 하는 옵션은?",
            options: [
                "Add python.exe to PATH",
                "Install launcher for all users",
                "Customize installation",
                "Disable path length limit",
                "Install for all users"
            ],
            answer: 1,
            points: 2
        },
        {
            question: "코랩에서 다른 사람과 파일을 공유할 때, 상대방이 파일을 단순하게 조회만 할 수 있도록 허용하는 공유 모드는?",
            options: [
                "편집자 모드",
                "뷰어 모드",
                "댓글 작성자 모드",
                "관리자 모드",
                "개발자 모드"
            ],
            answer: 2,
            points: 2
        }
    ]
};

// 문제 데이터 검증 함수
function validateQuestions() {
    const days = Object.keys(questions);
    
    days.forEach(day => {
        const dayQuestions = questions[day];
        console.log(`${day}: ${dayQuestions.length}개 문제`);
        
        dayQuestions.forEach((question, index) => {
            // 필수 필드 검증
            if (!question.question || !question.options || !question.answer || !question.points) {
                console.error(`${day} 문제 ${index + 1}: 필수 필드 누락`);
            }
            
            // 선택지 개수 검증
            if (question.options.length !== 5) {
                console.error(`${day} 문제 ${index + 1}: 선택지는 5개여야 합니다`);
            }
            
            // 정답 범위 검증
            if (question.answer < 1 || question.answer > 5) {
                console.error(`${day} 문제 ${index + 1}: 정답은 1-5 범위여야 합니다`);
            }
            
            // 점수 검증
            if (question.points !== 2) {
                console.error(`${day} 문제 ${index + 1}: 모든 문제는 2점이어야 합니다`);
            }
        });
        
        // 총 점수 검증
        const totalPoints = dayQuestions.reduce((sum, q) => sum + q.points, 0);
        if (totalPoints !== 20) {
            console.error(`${day}: 총 점수가 20점이 아닙니다 (현재: ${totalPoints}점)`);
        }
    });
}

// 개발 모드에서 문제 데이터 검증
if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
    validateQuestions();
}
        {
            question: "파이썬 프로그래밍 언어의 특징으로 옳지 않은 것은?",
            options: [
                "간결하고 쉬운 문법을 가지고 있다.",
                "수많은 표준 라이브러리를 제공한다.",
                "높은 생산성과 확장성을 가지고 있다.",
                "멀티스레드(multi-thread) 기능을 강력하게 지원한다.",
                "이식성이 뛰어나 다양한 운영체제에서 동작할 수 있다."
            ],
            answer: 4,
            points: 2
        },
        {
            question: "프로그램을 작성하는 방식을 의미하며, 개발자가 프로그래밍 언어를 구성하는 방식을 이해하는 데 도움을 주는 개념은 무엇인가?",
            options: [
                "프로그래밍 언어",
                "프로그래밍 패러다임",
                "저급 언어",
                "고급 언어",
                "프로그램"
            ],
            answer: 2,
            points: 2
        },
        {
            question: "컴퓨터가 이해하기 쉽고 0과 1로 명령어와 자료를 표현하는 언어를 무엇이라고 하는가?",
            options: [
                "고급 언어",
                "객체 지향 언어",
                "함수형 언어",
                "저급 언어",
                "자연어"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "다음 중 저급 언어에 속하는 프로그래밍 언어는?",
            options: [
                "C 언어",
                "C++ 언어",
                "자바 언어",
                "기계어",
                "파이썬 언어"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "다음 중 인공 지능(AI) 및 머신 러닝 개발에 가장 적합한 프로그래밍 언어는?",
            options: [
                "C 언어",
                "C++ 언어", 
                "자바 언어",
                "기계어",
                "파이썬 언어"
            ],
            answer: 5,
            points: 2
        },
        {
            question: "고급 언어에 대한 설명으로 옳은 것은?",
            options: [
                "하드웨어를 직접 제어할 수 있어 실행 속도가 매우 빠르다.",
                "기계 친화적이므로 배우기 어렵다.",
                "컴퓨터가 직접 이해할 수 있어 별도의 번역 프로그램이 필요 없다.",
                "사람이 사용하는 기호 체계를 이용하는 사람 중심의 언어이다.",
                "기계어와 어셈블리어가 대표적인 고급 언어에 속한다."
            ],
            answer: 4,
            points: 2
        },
        {
            question: "프로그래밍 패러다임 중 \"프로그램을 수많은 객체(object)라는 기본 단위로 나누고 이들을 상호 작용으로 설계한다\"는 특징을 가진 것은?",
            options: [
                "절차 지향 프로그래밍",
                "구조적 프로그래밍",
                "객체 지향 프로그래밍",
                "함수형 프로그래밍",
                "명령형 프로그래밍"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "다음 중 원시 프로그램 전체를 한꺼번에 번역하여 목적 프로그램을 생성하며, 한 번 목적 프로그램이 생성되면 재실행 시 번역 과정을 거치지 않아 실행 속도가 빠른 프로그래밍 구현 방법은?",
            options: [
                "인터프리터",
                "하이브리드",
                "컴파일러",
                "디버깅",
                "로더"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "자바스크립트 언어의 특징으로 옳지 않은 것은?",
            options: [
                "웹브라우저에 인터프리터가 내장되어 있는 인터프리터 언어이다.",
                "웹 페이지에 효과를 주거나 기능을 향상하는 목적으로 사용된다.",
                "멀티 패러다임 언어로 함수형, 명령형, 객체 지향형 언어를 지원한다.",
                "비동기 프로그래밍에 불리하며 코드를 이해하기 쉽다.",
                "버전에 따라 실행되지 않는 기능이 많고 CPU 작업이 많을 때 비효율적일 때가 있다."
            ],
            answer: 4,
            points: 2
        }
    ],

    // 2일차: 개발 절차 및 모형
    day2: [
        {
            question: "프로그램 개발 절차를 체계적으로 진행해야 하는 가장 큰 이유는?",
            options: [
                "개발자의 재량권을 최대화하기 위해",
                "최신 기술을 무조건 적용하기 위해",
                "해결해야 하는 문제의 요구 사항을 효율적이면서도 명확하게 처리하기 위해",
                "개발 기간을 최대한 늘려 안정성을 확보하기 위해",
                "최소한의 인력으로 개발을 완료하기 위해"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "전통적으로 많이 사용되어 왔으며, 전체적인 방향성과 추진 상황을 명확하게 파악할 수 있고 개발 일정과 예산을 예측하기 쉬운 프로그램 개발 절차 모형은?",
            options: [
                "V 모형",
                "애자일 모형 (Agile Model)",
                "나선형 모형 (Spiral Model)",
                "폭포수 모형",
                "반복적 모형 (Iterative Model)"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "프로그램 개발 절차에서 문제나 사용자 요구 사항을 이해하고, 이를 해결하기 위한 해결 방법을 찾는 과정은 무엇인가?",
            options: [
                "설계",
                "구현",
                "테스트",
                "문제 분석",
                "요구 분석"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "문제 분석 단계에서 파악한 문제를 해결하기 위해 필요한 기능과 특성을 요구 사항으로 정리하는 과정은?",
            options: [
                "설계",
                "구현",
                "테스트",
                "문제 분석",
                "요구 분석"
            ],
            answer: 5,
            points: 2
        },
        {
            question: "프로그램의 구조, 각 모듈 간의 연결, 데이터 구조 등을 정의하며, 충분한 시간을 투자하고 적절한 도구와 방법을 활용하여 수행하는 것이 중요한 개발 단계는?",
            options: [
                "설계",
                "구현",
                "테스트",
                "문제 분석",
                "요구 분석"
            ],
            answer: 1,
            points: 2
        },
        {
            question: "설계 단계에서 고려해야 할 사항으로 옳지 않은 것은?",
            options: [
                "개발자가 직접 작성한 코드나 시스템의 오류를 발견하고 수정하는 과정",
                "프로그램을 모듈화하여 코드의 재사용성과 유지 보수성을 높이는 방안 정의",
                "시스템에서 다룰 데이터의 구조와 처리 방법을 결정",
                "구현해야 할 기능의 알고리즘을 선택하고 최적화 방법을 결정",
                "프로그램의 기능, 성능, 보안, 확장성 등에 대한 계획 수립"
            ],
            answer: 1,
            points: 2
        },
        {
            question: "개별 모듈이나 함수 등의 단위 코드를 테스트하며, 일반적으로 개발자가 직접 작성하여 실행하는 테스트 유형은?",
            options: [
                "단위 테스트",
                "시스템 테스트",
                "인수 테스트",
                "통합 테스트",
                "회귀 테스트"
            ],
            answer: 1,
            points: 2
        },
        {
            question: "사용자나 고객의 입장에서 실제 환경에서 사용될 때의 동작을 검증하는 테스트로, 대표적으로 알파 테스트와 베타 테스트가 있는 테스트 유형은?",
            options: [
                "단위 테스트",
                "시스템 테스트",
                "인수 테스트",
                "통합 테스트",
                "회귀 테스트"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "프로그램 시스템 전반에 대한 테스트로 사용자 시나리오를 기반으로 테스트를 수행하며, 일반적으로 개발자나 테스터가 진행하는 테스트 유형은?",
            options: [
                "단위 테스트",
                "시스템 테스트",
                "인수 테스트",
                "통합 테스트",
                "회귀 테스트"
            ],
            answer: 2,
            points: 2
        },
        {
            question: "세계 최초의 컴퓨터 프로그래머로, 1843년에 기계가 특정한 식을 계산할 수 있도록 하는 '명령문' 예시를 개발하고 오늘날 프로그래밍 언어의 필수적인 루프문, 조건문, 서브루틴 등 프로그램 제어문 개념을 최초로 고안한 인물은?",
            options: [
                "찰스 배비지",
                "리누스 토발스",
                "귀도 반 로섬",
                "에이다 러브레이스",
                "앨런 튜링"
            ],
            answer: 4,
            points: 2
        }
    ],

    // 3일차: 알고리즘 기초
    day3: [
        {
            question: "어떤 문제를 컴퓨터로 해결하기 위한 논리적인 절차나 방법을 의미하며, 주어진 문제를 처리하면 항상 올바른 방법으로 해결되어야 하는 것은 무엇인가?",
            options: [
                "프로그램",
                "프로그래밍 언어",
                "알고리즘",
                "프로그래밍 패러다임",
                "데이터 구조"
            ],
            answer: 3,
            points: 2
        },
        {
            question: "알고리즘이 만족해야 하는 조건으로 옳지 않은 것은?",
            options: [
                "입력: 0개 이상의 입력이 외부에서 제공되어야 한다.",
                "출력: 입력에 대해 최소한 1개 이상의 결과가 존재해야 한다.",
                "명확성: 각 단계의 의미가 명확해야 한다.",
                "유한성: 각 단계는 유한해야 한다(반드시 종료되어야 한다).",
                "효율성: 모든 과정이 무한한 시간 내에 실행 가능해야 한다."
            ],
            answer: 5,
            points: 2
        },
        {
            question: "동일한 문제를 해결하는 여러 알고리즘 중에서 어떤 것이 가장 적절한 방법인지를 선택하기 위한 평가 기준으로, 알고리즘에서 처리하는 연산의 횟수(실행 시간)를 의미하는 것은?",
            options: [
                "정확성",
                "유한성",
                "명확성",
                "공간 복잡도",
                "시간 복잡도"
            ],
            answer: 5,
            points: 2
        },
        {
            question: "알고리즘의 평가 방법 중 \"입력 데이터양에 따른 알고리즘 처리 시간의 예측이 가능해진다\"는 점에서 특히 중요하게 다루어지는 것은?",
            options: [
                "정확성",
                "유한성",
                "명확성",
                "공간 복잡도",
                "시간 복잡도"
            ],
            answer: 5,
            points: 2
        },
        {
            question: "알고리즘을 표현하는 대표적인 방법 중, 국제표준기호(ISO)를 사용하여 순서를 나타내는 방법은?",
            options: [
                "의사 코드",
                "자연어",
                "프로그래밍 언어",
                "순서도 (flow-chart)",
                "텍스트 기반 코드"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "알고리즘을 표현하는 방법 중, 흐름을 텍스트로 표현하며 특정 프로그래밍 언어에 구애받지 않는 것은?",
            options: [
                "순서도",
                "자연어",
                "프로그래밍 언어",
                "의사 코드",
                "UML 다이어그램"
            ],
            answer: 4,
            points: 2
        },
        {
            question: "순서도에서 사용하는 기호 중 \"조건에 따라 참(True), 거짓(False)으로 처리\"하는 기능을 나타내는 기호의 명칭은?",
            options: [
                "단말",
                "판단",
                "처리",
                "입출력",
                "준비"
            ],
            answer: 2,
            points: 2
        },
        {
            question: "순서도에서 사용하는 기호 중 \"순서도의 시작과 끝을 알림\" 기능을 나타내는 기호의 명칭은?",
            options: [
                "단말",
                "판단",
                "처리",
                "입출력",
                "준비"
            ],
            answer: 1,
            points: 2
        },